[
  {
    "objectID": "Homework4-Jie Chen-st558.html",
    "href": "Homework4-Jie Chen-st558.html",
    "title": "Homework 4 - ST558",
    "section": "",
    "text": "The lapply() function in R is used to apply a function to each element of a list (or a vector, which is treated as a list of elements) and return the results in a list. It is a powerful function for iterating over lists and performing operations on each element.\nThe equivalent purrr function for lapply() is map().\n\n\n\nlapply(X=my_list,FUN=cor,method=“kendall”)\n\n\n\n(1) The purrr package provides a consistent and readable approach to functional programming in R, with well-named functions and tidy evaluation principles.\n(2) purrr offers type-specific functions (map_dbl(), map_chr(), map_int(), map_lgl() ) that ensure the output is of a specific type.\n\n\n\nA side-effect function performs operations that affect the state outside its own scope, in addition to returning a value. These operations can include modifying global variables, changing the state of objects, writing to a file, printing to the console, or performing I/O operations.\n\n\n\nR uses lexical scoping, that when it looks up the value of a name, it searches through a series of environments in a specific order. If a name is found in an environment, R stops searching and uses that value."
  },
  {
    "objectID": "Homework4-Jie Chen-st558.html#task-1-conceptual-questions",
    "href": "Homework4-Jie Chen-st558.html#task-1-conceptual-questions",
    "title": "Homework 4 - ST558",
    "section": "",
    "text": "The lapply() function in R is used to apply a function to each element of a list (or a vector, which is treated as a list of elements) and return the results in a list. It is a powerful function for iterating over lists and performing operations on each element.\nThe equivalent purrr function for lapply() is map().\n\n\n\nlapply(X=my_list,FUN=cor,method=“kendall”)\n\n\n\n(1) The purrr package provides a consistent and readable approach to functional programming in R, with well-named functions and tidy evaluation principles.\n(2) purrr offers type-specific functions (map_dbl(), map_chr(), map_int(), map_lgl() ) that ensure the output is of a specific type.\n\n\n\nA side-effect function performs operations that affect the state outside its own scope, in addition to returning a value. These operations can include modifying global variables, changing the state of objects, writing to a file, printing to the console, or performing I/O operations.\n\n\n\nR uses lexical scoping, that when it looks up the value of a name, it searches through a series of environments in a specific order. If a name is found in an environment, R stops searching and uses that value."
  },
  {
    "objectID": "Homework4-Jie Chen-st558.html#task-2---writing-r-functions",
    "href": "Homework4-Jie Chen-st558.html#task-2---writing-r-functions",
    "title": "Homework 4 - ST558",
    "section": "Task 2 - Writing R Functions",
    "text": "Task 2 - Writing R Functions\n\nWrite a basic function (getRMSE()) that takes in a vector of responses and a vector of predictions and outputs the RMSE.\n\nIf a value is missing for the vector of responses (i.e. an NA is present), allow for additional arguments to the mean() function that removes the NA values in the computation.\n\nspecify na.rm = TRUE to remove NA values from the computation getRMSE(resp,pred,na.rm=TRUE)\n\n\nCreate some responses and predictions.\nAnother common metric for evaluating predictions is mean absolute deviation\ncreate a wrapper function to get either or both metrics returned\ncreate response values and predictions and test function\n\n\n# test function by passing incorrect data\ndf &lt;-data.frame(resp,pred)\n\n  getMETRICS(df,pred,na.rm=TRUE)\n\n\nError in getMETRICS(df, pred, na.rm = TRUE) : Must be numeric vectors."
  },
  {
    "objectID": "Homework4-Jie Chen-st558.html#task-3---querying-an-api-and-a-tidy-style-function",
    "href": "Homework4-Jie Chen-st558.html#task-3---querying-an-api-and-a-tidy-style-function",
    "title": "Homework 4 - ST558",
    "section": "Task 3 - Querying an API and a Tidy-Style Function",
    "text": "Task 3 - Querying an API and a Tidy-Style Function\n\nUse GET() from the httr package to return info about a topic interested lately\n\n\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(tidyverse)\n\n# Connect to the news API: newsapi.org\n# my API key\nsource(\"api_key.R\")\n\n# define topic interested\ntopic &lt;-\"heat wave\"\n\n# build the URL for the API request\nurl &lt;- paste0(\"https://newsapi.org/v2/everything?q=\", URLencode(topic), \"&apiKey=\", api_key)\n\n# Make the GET request\nresponse &lt;- GET(url)\n# check the structure of the response\nstr(response,max.level=1)\n\nList of 10\n $ url        : chr \"https://newsapi.org/v2/everything?q=heat%20wave&apiKey=03b9060366374f6d9459d2396315a0e8\"\n $ status_code: int 200\n $ headers    :List of 16\n  ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n $ all_headers:List of 1\n $ cookies    :'data.frame':    0 obs. of  7 variables:\n $ content    : raw [1:82525] 7b 22 73 74 ...\n $ date       : POSIXct[1:1], format: \"2024-07-06 00:51:54\"\n $ times      : Named num [1:6] 0 0.0196 0.0458 0.0803 0.136 ...\n  ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n $ request    :List of 7\n  ..- attr(*, \"class\")= chr \"request\"\n $ handle     :Class 'curl_handle' &lt;externalptr&gt; \n - attr(*, \"class\")= chr \"response\"\n\n\n\nparse the response\n\n\nparsed &lt;-fromJSON(rawToChar(response$content))\n\narticle_info &lt;-as_tibble(parsed$articles)\n\nprint(article_info)\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      NPR   Olivi… Heat… NPR's Mich… http… https://n… 2024-06-19… \"The E…\n 2 &lt;NA&gt;      NPR   Miche… Extr… NPR's Mich… http… https://m… 2024-06-21… \"NPR's…\n 3 &lt;NA&gt;      NPR   Julia… Heat… As the hea… http… https://n… 2024-06-22… \"A maj…\n 4 &lt;NA&gt;      NPR   Joe H… Mill… A swelteri… http… https://n… 2024-06-16… \"A swe…\n 5 &lt;NA&gt;      NPR   Manol… How … A heat wav… http… https://m… 2024-07-03… \"A hea…\n 6 &lt;NA&gt;      NPR   Jorda… Nest… It’s nesti… http… https://m… 2024-07-04… \"Its n…\n 7 time      Time  Solcy… Here… Record-hig… http… https://a… 2024-06-17… \"The e…\n 8 &lt;NA&gt;      NPR   Rache… Heat… As New Eng… http… https://n… 2024-06-20… \"The U…\n 9 &lt;NA&gt;      NPR   Rache… Summ… Astronomic… http… https://n… 2024-06-20… \"Summe…\n10 &lt;NA&gt;      NPR   Diaa … A po… People in … http… https://m… 2024-06-26… \"Peopl…\n# ℹ 90 more rows\n\n\n\nwrite a function that allows user to query this API\n\n\nquery_news_api &lt;- function(subject, start_date, api_key) {\n  # Build the URL for the API request\n  url &lt;- paste0(\n    \"https://newsapi.org/v2/everything?\",\n    \"q=\", URLencode(subject),\n    \"&from=\", start_date,\n    \"&sortBy=publishedAt\",\n    \"&apiKey=\", api_key\n  )\n  # Make the GET request\n   GET(url)$content |&gt;\n     rawToChar() |&gt;\n     fromJSON() |&gt;\n     pluck(\"articles\")|&gt;\n     as_tibble()\n   \n}\n  \ndata1 &lt;- query_news_api(\"joe biden\",\"2024-06-25\",api_key)\ndata1\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Yaho…  &lt;NA&gt;  美大… \"美國總統…  http… &lt;NA&gt;       2024-07-05… \"If yo…\n 2 &lt;NA&gt;      NPR   \"Bria… Bide… \"Hawaii Go… http… https://n… 2024-07-05… \"Hawai…\n 3 &lt;NA&gt;      Forb… \"Shei… Dema… \"Demanding… http… https://i… 2024-07-05… \"What …\n 4 newsweek  News… \"Kait… Joe … \"Abigail D… http… https://d… 2024-07-05… \"Abiga…\n 5 newsweek  News… \"Jenn… Doze… \"One Democ… http… https://d… 2024-07-05… \"Aroun…\n 6 breitbar… Brei… \"Ian … Dem … \"On Thursd… http… https://m… 2024-07-05… \"On Th…\n 7 breitbar… Brei… \"Ian … Dem … \"On Thursd… http… https://m… 2024-07-05… \"On Th…\n 8 &lt;NA&gt;      [Rem…  &lt;NA&gt;  [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… \"[Remo…\n 9 &lt;NA&gt;      Terr… \"Reut… Bide… \"O preside… http… https://s… 2024-07-05… \"O pre…\n10 &lt;NA&gt;      Free… \"NBC … Some… \"Some form… http… &lt;NA&gt;       2024-07-05… \"Skip …\n# ℹ 90 more rows\n\ndata2 &lt;- query_news_api(\"heat wave\",\"2024-06-15\",api_key)  \ndata2\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Stat… state… Hath… Omkar Datt… http… https://s… 2024-07-05… \"Omkar…\n 2 abc-news… ABC … Malco… From… Some of th… http… https://l… 2024-07-05… \"Drive…\n 3 &lt;NA&gt;      The … DAVID… Amer… Sizzling t… http… https://b… 2024-07-04… \"The T…\n 4 &lt;NA&gt;      The … Gao S… Roun… LOS ANGELE… http… https://c… 2024-07-04… \"LOS A…\n 5 &lt;NA&gt;      Insi… Jess … Mult… First resp… http… https://i… 2024-07-04… \"First…\n 6 &lt;NA&gt;      NPR   Jorda… Nest… It’s nesti… http… https://m… 2024-07-04… \"Its n…\n 7 espn      ESPN  Nate … F1 r… Many in F1… http… https://a… 2024-07-04… \"SILVE…\n 8 &lt;NA&gt;      Slas… feedf… Vide… Video: Fou… http… &lt;NA&gt;       2024-07-04… \"Sign …\n 9 &lt;NA&gt;      The … Gao S… Over… LOS ANGELE… http… https://c… 2024-07-04… \"LOS A…\n10 &lt;NA&gt;      [Rem… &lt;NA&gt;   [Rem… [Removed]   http… &lt;NA&gt;       1970-01-01… \"[Remo…\n# ℹ 90 more rows"
  }
]